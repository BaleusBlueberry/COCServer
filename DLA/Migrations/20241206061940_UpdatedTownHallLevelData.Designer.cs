// <auto-generated />
using DLA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DLA.Migrations
{
    [DbContext(typeof(ContextDLA))]
    [Migration("20241206061940_UpdatedTownHallLevelData")]
    partial class UpdatedTownHallLevelData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DLA.Models.TownHallModels.DarkElixirTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprenticeWarden")
                        .HasColumnType("int");

                    b.Property<int>("BatSpell")
                        .HasColumnType("int");

                    b.Property<int>("Bowler")
                        .HasColumnType("int");

                    b.Property<int>("Druid")
                        .HasColumnType("int");

                    b.Property<int>("EarthquakeSpell")
                        .HasColumnType("int");

                    b.Property<int>("Golem")
                        .HasColumnType("int");

                    b.Property<int>("HasteSpell")
                        .HasColumnType("int");

                    b.Property<int>("Headhunter")
                        .HasColumnType("int");

                    b.Property<int>("HogRider")
                        .HasColumnType("int");

                    b.Property<int>("IceGolem")
                        .HasColumnType("int");

                    b.Property<int>("LavaHound")
                        .HasColumnType("int");

                    b.Property<int>("Minion")
                        .HasColumnType("int");

                    b.Property<int>("OvergrowthSpell")
                        .HasColumnType("int");

                    b.Property<int>("PoisonSpell")
                        .HasColumnType("int");

                    b.Property<int>("SkeletonSpell")
                        .HasColumnType("int");

                    b.Property<int>("Valkyrie")
                        .HasColumnType("int");

                    b.Property<int>("Witch")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DarkElixirTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.DefensiveBuildingsTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirDefense")
                        .HasColumnType("int");

                    b.Property<int>("AirSweeper")
                        .HasColumnType("int");

                    b.Property<int>("ArcherTower")
                        .HasColumnType("int");

                    b.Property<int>("BombTower")
                        .HasColumnType("int");

                    b.Property<int>("BuilderHut")
                        .HasColumnType("int");

                    b.Property<int>("Cannon")
                        .HasColumnType("int");

                    b.Property<int>("EagleArtillery")
                        .HasColumnType("int");

                    b.Property<int>("HiddenTesla")
                        .HasColumnType("int");

                    b.Property<int>("InfernoTower")
                        .HasColumnType("int");

                    b.Property<int>("Mortar")
                        .HasColumnType("int");

                    b.Property<int>("Scattershot")
                        .HasColumnType("int");

                    b.Property<int>("Walls")
                        .HasColumnType("int");

                    b.Property<int>("WizardTower")
                        .HasColumnType("int");

                    b.Property<int>("XBow")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DefensiveBuildingsTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.ElixirTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Archer")
                        .HasColumnType("int");

                    b.Property<int>("BabyDragon")
                        .HasColumnType("int");

                    b.Property<int>("Balloon")
                        .HasColumnType("int");

                    b.Property<int>("Barbarian")
                        .HasColumnType("int");

                    b.Property<int>("CloneSpell")
                        .HasColumnType("int");

                    b.Property<int>("Dragon")
                        .HasColumnType("int");

                    b.Property<int>("DragonRider")
                        .HasColumnType("int");

                    b.Property<int>("ElectroDragon")
                        .HasColumnType("int");

                    b.Property<int>("ElectroTitan")
                        .HasColumnType("int");

                    b.Property<int>("FreezeSpell")
                        .HasColumnType("int");

                    b.Property<int>("Giant")
                        .HasColumnType("int");

                    b.Property<int>("Goblin")
                        .HasColumnType("int");

                    b.Property<int>("Healer")
                        .HasColumnType("int");

                    b.Property<int>("HealingSpell")
                        .HasColumnType("int");

                    b.Property<int>("InvisibilitySpell")
                        .HasColumnType("int");

                    b.Property<int>("JumpSpell")
                        .HasColumnType("int");

                    b.Property<int>("LightningSpell")
                        .HasColumnType("int");

                    b.Property<int>("Miner")
                        .HasColumnType("int");

                    b.Property<int>("PEKKA")
                        .HasColumnType("int");

                    b.Property<int>("RageSpell")
                        .HasColumnType("int");

                    b.Property<int>("RecallSpell")
                        .HasColumnType("int");

                    b.Property<int>("RootRider")
                        .HasColumnType("int");

                    b.Property<int>("WallBreaker")
                        .HasColumnType("int");

                    b.Property<int>("Wizard")
                        .HasColumnType("int");

                    b.Property<int>("Yeti")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ElixirTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.HeroesTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArcherQueen")
                        .HasColumnType("int");

                    b.Property<int>("BarbarianKing")
                        .HasColumnType("int");

                    b.Property<int>("GrandWarden")
                        .HasColumnType("int");

                    b.Property<int>("MinionPrince")
                        .HasColumnType("int");

                    b.Property<int>("RoyalChampion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeroesTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.LaboratoryTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DarkElixirUpgradesId")
                        .HasColumnType("int");

                    b.Property<int>("ElixirUpgradesId")
                        .HasColumnType("int");

                    b.Property<int>("SiegeMachineUpgradesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DarkElixirUpgradesId");

                    b.HasIndex("ElixirUpgradesId");

                    b.HasIndex("SiegeMachineUpgradesId");

                    b.ToTable("LaboratoryTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.OtherBuildingsTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmyCamp")
                        .HasColumnType("int");

                    b.Property<int>("Barracks")
                        .HasColumnType("int");

                    b.Property<int>("Blacksmith")
                        .HasColumnType("int");

                    b.Property<int>("DarkBarracks")
                        .HasColumnType("int");

                    b.Property<int>("DarkSpellFactory")
                        .HasColumnType("int");

                    b.Property<int>("Laboratory")
                        .HasColumnType("int");

                    b.Property<int>("PetHouse")
                        .HasColumnType("int");

                    b.Property<int>("SpellFactory")
                        .HasColumnType("int");

                    b.Property<int>("Workshop")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OtherBuildingsTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.ResourceBuildings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ResourceBuildings");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.SiegeMachinesTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BattleBlimp")
                        .HasColumnType("int");

                    b.Property<int>("BattleDrill")
                        .HasColumnType("int");

                    b.Property<int>("FlameFlinger")
                        .HasColumnType("int");

                    b.Property<int>("LogLauncher")
                        .HasColumnType("int");

                    b.Property<int>("SiegeBarracks")
                        .HasColumnType("int");

                    b.Property<int>("StoneSlammer")
                        .HasColumnType("int");

                    b.Property<int>("WallWrecker")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiegeMachinesTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.TownHallData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefensiveBuildingsId")
                        .HasColumnType("int");

                    b.Property<int>("HeroesId")
                        .HasColumnType("int");

                    b.Property<int>("LaboratoryUpgradesId")
                        .HasColumnType("int");

                    b.Property<int>("OtherBuildingsId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceBuildingsId")
                        .HasColumnType("int");

                    b.Property<int>("TrapBuildingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefensiveBuildingsId");

                    b.HasIndex("HeroesId");

                    b.HasIndex("LaboratoryUpgradesId");

                    b.HasIndex("OtherBuildingsId");

                    b.HasIndex("ResourceBuildingsId");

                    b.HasIndex("TrapBuildingsId");

                    b.ToTable("TownHallData");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.TownHallLevels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("TownHallLevels");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.TrapBuildingsTownHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirBomb")
                        .HasColumnType("int");

                    b.Property<int>("Bomb")
                        .HasColumnType("int");

                    b.Property<int>("GiantBomb")
                        .HasColumnType("int");

                    b.Property<int>("SeekingAirMine")
                        .HasColumnType("int");

                    b.Property<int>("SkeletonTrap")
                        .HasColumnType("int");

                    b.Property<int>("SpringTrap")
                        .HasColumnType("int");

                    b.Property<int>("TornadoTrap")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrapBuildingsTownHall");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.LaboratoryTownHall", b =>
                {
                    b.HasOne("DLA.Models.TownHallModels.DarkElixirTownHall", "DarkElixirUpgrades")
                        .WithMany()
                        .HasForeignKey("DarkElixirUpgradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.ElixirTownHall", "ElixirUpgrades")
                        .WithMany()
                        .HasForeignKey("ElixirUpgradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.SiegeMachinesTownHall", "SiegeMachineUpgrades")
                        .WithMany()
                        .HasForeignKey("SiegeMachineUpgradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DarkElixirUpgrades");

                    b.Navigation("ElixirUpgrades");

                    b.Navigation("SiegeMachineUpgrades");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.TownHallData", b =>
                {
                    b.HasOne("DLA.Models.TownHallModels.DefensiveBuildingsTownHall", "DefensiveBuildings")
                        .WithMany()
                        .HasForeignKey("DefensiveBuildingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.HeroesTownHall", "Heroes")
                        .WithMany()
                        .HasForeignKey("HeroesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.LaboratoryTownHall", "LaboratoryUpgrades")
                        .WithMany()
                        .HasForeignKey("LaboratoryUpgradesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.OtherBuildingsTownHall", "OtherBuildings")
                        .WithMany()
                        .HasForeignKey("OtherBuildingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.ResourceBuildings", "ResourceBuildings")
                        .WithMany()
                        .HasForeignKey("ResourceBuildingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DLA.Models.TownHallModels.TrapBuildingsTownHall", "TrapBuildings")
                        .WithMany()
                        .HasForeignKey("TrapBuildingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefensiveBuildings");

                    b.Navigation("Heroes");

                    b.Navigation("LaboratoryUpgrades");

                    b.Navigation("OtherBuildings");

                    b.Navigation("ResourceBuildings");

                    b.Navigation("TrapBuildings");
                });

            modelBuilder.Entity("DLA.Models.TownHallModels.TownHallLevels", b =>
                {
                    b.HasOne("DLA.Models.TownHallModels.TownHallData", "Data")
                        .WithMany()
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
